/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as protectedMainLayoutImport } from './routes/(protected)/_mainLayout'
import { Route as authAuthLayoutImport } from './routes/(auth)/_authLayout'
import { Route as protectedMainLayoutDonorsIndexImport } from './routes/(protected)/_mainLayout/donors/index'
import { Route as protectedMainLayoutDashboardDashboardImport } from './routes/(protected)/_mainLayout/_dashboard/dashboard'
import { Route as authAuthLayoutSignupSignupImport } from './routes/(auth)/_authLayout/_signup/signup'
import { Route as authAuthLayoutLoginLoginImport } from './routes/(auth)/_authLayout/_login/login'
import { Route as protectedMainLayoutDonorsDonorIdIndexImport } from './routes/(protected)/_mainLayout/donors/$donorId/index'

// Create Virtual Routes

const protectedImport = createFileRoute('/(protected)')()
const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const protectedRoute = protectedImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const protectedMainLayoutRoute = protectedMainLayoutImport.update({
  id: '/_mainLayout',
  getParentRoute: () => protectedRoute,
} as any)

const authAuthLayoutRoute = authAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => authRoute,
} as any)

const protectedMainLayoutDonorsIndexRoute =
  protectedMainLayoutDonorsIndexImport.update({
    id: '/donors/',
    path: '/donors/',
    getParentRoute: () => protectedMainLayoutRoute,
  } as any)

const protectedMainLayoutDashboardDashboardRoute =
  protectedMainLayoutDashboardDashboardImport.update({
    id: '/_dashboard/dashboard',
    path: '/dashboard',
    getParentRoute: () => protectedMainLayoutRoute,
  } as any)

const authAuthLayoutSignupSignupRoute = authAuthLayoutSignupSignupImport.update(
  {
    id: '/_signup/signup',
    path: '/signup',
    getParentRoute: () => authAuthLayoutRoute,
  } as any,
)

const authAuthLayoutLoginLoginRoute = authAuthLayoutLoginLoginImport.update({
  id: '/_login/login',
  path: '/login',
  getParentRoute: () => authAuthLayoutRoute,
} as any)

const protectedMainLayoutDonorsDonorIdIndexRoute =
  protectedMainLayoutDonorsDonorIdIndexImport.update({
    id: '/donors/$donorId/',
    path: '/donors/$donorId/',
    getParentRoute: () => protectedMainLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_authLayout': {
      id: '/(auth)/_authLayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthLayoutImport
      parentRoute: typeof authRoute
    }
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_mainLayout': {
      id: '/(protected)/_mainLayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedMainLayoutImport
      parentRoute: typeof protectedRoute
    }
    '/(auth)/_authLayout/_login/login': {
      id: '/(auth)/_authLayout/_login/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authAuthLayoutLoginLoginImport
      parentRoute: typeof authAuthLayoutImport
    }
    '/(auth)/_authLayout/_signup/signup': {
      id: '/(auth)/_authLayout/_signup/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authAuthLayoutSignupSignupImport
      parentRoute: typeof authAuthLayoutImport
    }
    '/(protected)/_mainLayout/_dashboard/dashboard': {
      id: '/(protected)/_mainLayout/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedMainLayoutDashboardDashboardImport
      parentRoute: typeof protectedMainLayoutImport
    }
    '/(protected)/_mainLayout/donors/': {
      id: '/(protected)/_mainLayout/donors/'
      path: '/donors'
      fullPath: '/donors'
      preLoaderRoute: typeof protectedMainLayoutDonorsIndexImport
      parentRoute: typeof protectedMainLayoutImport
    }
    '/(protected)/_mainLayout/donors/$donorId/': {
      id: '/(protected)/_mainLayout/donors/$donorId/'
      path: '/donors/$donorId'
      fullPath: '/donors/$donorId'
      preLoaderRoute: typeof protectedMainLayoutDonorsDonorIdIndexImport
      parentRoute: typeof protectedMainLayoutImport
    }
  }
}

// Create and export the route tree

interface authAuthLayoutRouteChildren {
  authAuthLayoutLoginLoginRoute: typeof authAuthLayoutLoginLoginRoute
  authAuthLayoutSignupSignupRoute: typeof authAuthLayoutSignupSignupRoute
}

const authAuthLayoutRouteChildren: authAuthLayoutRouteChildren = {
  authAuthLayoutLoginLoginRoute: authAuthLayoutLoginLoginRoute,
  authAuthLayoutSignupSignupRoute: authAuthLayoutSignupSignupRoute,
}

const authAuthLayoutRouteWithChildren = authAuthLayoutRoute._addFileChildren(
  authAuthLayoutRouteChildren,
)

interface authRouteChildren {
  authAuthLayoutRoute: typeof authAuthLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthLayoutRoute: authAuthLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface protectedMainLayoutRouteChildren {
  protectedMainLayoutDashboardDashboardRoute: typeof protectedMainLayoutDashboardDashboardRoute
  protectedMainLayoutDonorsIndexRoute: typeof protectedMainLayoutDonorsIndexRoute
  protectedMainLayoutDonorsDonorIdIndexRoute: typeof protectedMainLayoutDonorsDonorIdIndexRoute
}

const protectedMainLayoutRouteChildren: protectedMainLayoutRouteChildren = {
  protectedMainLayoutDashboardDashboardRoute:
    protectedMainLayoutDashboardDashboardRoute,
  protectedMainLayoutDonorsIndexRoute: protectedMainLayoutDonorsIndexRoute,
  protectedMainLayoutDonorsDonorIdIndexRoute:
    protectedMainLayoutDonorsDonorIdIndexRoute,
}

const protectedMainLayoutRouteWithChildren =
  protectedMainLayoutRoute._addFileChildren(protectedMainLayoutRouteChildren)

interface protectedRouteChildren {
  protectedMainLayoutRoute: typeof protectedMainLayoutRouteWithChildren
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedMainLayoutRoute: protectedMainLayoutRouteWithChildren,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof protectedMainLayoutRouteWithChildren
  '/login': typeof authAuthLayoutLoginLoginRoute
  '/signup': typeof authAuthLayoutSignupSignupRoute
  '/dashboard': typeof protectedMainLayoutDashboardDashboardRoute
  '/donors': typeof protectedMainLayoutDonorsIndexRoute
  '/donors/$donorId': typeof protectedMainLayoutDonorsDonorIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof protectedMainLayoutRouteWithChildren
  '/login': typeof authAuthLayoutLoginLoginRoute
  '/signup': typeof authAuthLayoutSignupSignupRoute
  '/dashboard': typeof protectedMainLayoutDashboardDashboardRoute
  '/donors': typeof protectedMainLayoutDonorsIndexRoute
  '/donors/$donorId': typeof protectedMainLayoutDonorsDonorIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_authLayout': typeof authAuthLayoutRouteWithChildren
  '/(protected)': typeof protectedRouteWithChildren
  '/(protected)/_mainLayout': typeof protectedMainLayoutRouteWithChildren
  '/(auth)/_authLayout/_login/login': typeof authAuthLayoutLoginLoginRoute
  '/(auth)/_authLayout/_signup/signup': typeof authAuthLayoutSignupSignupRoute
  '/(protected)/_mainLayout/_dashboard/dashboard': typeof protectedMainLayoutDashboardDashboardRoute
  '/(protected)/_mainLayout/donors/': typeof protectedMainLayoutDonorsIndexRoute
  '/(protected)/_mainLayout/donors/$donorId/': typeof protectedMainLayoutDonorsDonorIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/donors'
    | '/donors/$donorId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/dashboard' | '/donors' | '/donors/$donorId'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_authLayout'
    | '/(protected)'
    | '/(protected)/_mainLayout'
    | '/(auth)/_authLayout/_login/login'
    | '/(auth)/_authLayout/_signup/signup'
    | '/(protected)/_mainLayout/_dashboard/dashboard'
    | '/(protected)/_mainLayout/donors/'
    | '/(protected)/_mainLayout/donors/$donorId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  protectedRoute: typeof protectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  protectedRoute: protectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/(protected)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_authLayout"
      ]
    },
    "/(auth)/_authLayout": {
      "filePath": "(auth)/_authLayout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_authLayout/_login/login",
        "/(auth)/_authLayout/_signup/signup"
      ]
    },
    "/(protected)": {
      "filePath": "(protected)",
      "children": [
        "/(protected)/_mainLayout"
      ]
    },
    "/(protected)/_mainLayout": {
      "filePath": "(protected)/_mainLayout.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/_mainLayout/_dashboard/dashboard",
        "/(protected)/_mainLayout/donors/",
        "/(protected)/_mainLayout/donors/$donorId/"
      ]
    },
    "/(auth)/_authLayout/_login/login": {
      "filePath": "(auth)/_authLayout/_login/login.tsx",
      "parent": "/(auth)/_authLayout"
    },
    "/(auth)/_authLayout/_signup/signup": {
      "filePath": "(auth)/_authLayout/_signup/signup.tsx",
      "parent": "/(auth)/_authLayout"
    },
    "/(protected)/_mainLayout/_dashboard/dashboard": {
      "filePath": "(protected)/_mainLayout/_dashboard/dashboard.tsx",
      "parent": "/(protected)/_mainLayout"
    },
    "/(protected)/_mainLayout/donors/": {
      "filePath": "(protected)/_mainLayout/donors/index.tsx",
      "parent": "/(protected)/_mainLayout"
    },
    "/(protected)/_mainLayout/donors/$donorId/": {
      "filePath": "(protected)/_mainLayout/donors/$donorId/index.tsx",
      "parent": "/(protected)/_mainLayout"
    }
  }
}
ROUTE_MANIFEST_END */
